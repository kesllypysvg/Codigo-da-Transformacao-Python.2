def exibir_menu():
    """Exibe o menu de opções para o usuário."""
    print("\n--- Menu da Lista de Compras ---")
    print("1. Adicionar item")
    print("2. Remover item")
    print("3. Visualizar lista")
    print("4. Sair")

def adicionar_item(lista):
    """Adiciona um item à lista de compras."""
    item = input("Digite o nome do item a ser adicionado: ").strip().capitalize()
    if item:
        lista.append(item)
        print(f"'{item}' foi adicionado à lista.")
    else:
        print("Nome de item inválido. Tente novamente.")

def remover_item(lista):
    """Remove um item da lista de compras."""
    if not lista:
        print("A lista de compras está vazia.")
        return

    print("\n--- Itens na Lista ---")
    for i, item in enumerate(lista):
        print(f"{i+1}. {item}")

    try:
        escolha = int(input("Digite o número do item a ser removido: "))
        if 1 <= escolha <= len(lista):
            item_removido = lista.pop(escolha - 1)
            print(f"'{item_removido}' foi removido da lista.")
        else:
            print("Número de item inválido. Tente novamente.")
    except ValueError:
        print("Entrada inválida. Digite um número.")

def visualizar_lista(lista):
    """Exibe todos os itens da lista de compras."""
    if not lista:
        print("A lista de compras está vazia.")
    else:
        print("\n--- Sua Lista de Compras ---")
        for item in sorted(lista):
            print(f"- {item}")

def main():
    """Função principal do programa."""
    lista_de_compras = []

    while True:
        exibir_menu()
        escolha = input("Escolha uma opção: ")

        if escolha == '1':
            adicionar_item(lista_de_compras)
        elif escolha == '2':
            remover_item(lista_de_compras)
        elif escolha == '3':
            visualizar_lista(lista_de_compras)
        elif escolha == '4':
            print("Saindo do programa. Até mais!")
            break
        else:
            print("Opção inválida. Por favor, escolha uma opção de 1 a 4.")

if __name__ == "__main__":
    main()
